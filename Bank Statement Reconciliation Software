import csv
opening_balance = input("What is the opening balance according to the previous years accounts (Excluding 'Â£' sign): ")
float(opening_balance)
balance = 0
float(balance)
statement = csv.reader(open('bank_statement.csv','r', encoding='utf-8-sig'))
income = csv.reader(open('client_incoming.csv','r', encoding='utf-8-sig'))
outcome = csv.reader(open('client_outgoing.csv','r', encoding='utf-8-sig'))

list1a = [] #bank date
list1b = [] #bank balance
list2a = [] #client date
list2b = [] #client income
list3a = [] #client date
list3b = [] #client outgoing

for row in statement:
    list1a.append(row[0])
    list1b.append(format(float(row[1]),".2f"))
    
for row in income:
    list2a.append(row[0])
    list2b.append(format(float(row[1]),".2f"))
    
for row in outcome:
    list3a.append(row[0])
    list3b.append(format(float(row[1]),".2f"))
    
k = 0
p = 0
o = 0

for i in range(0,len(list1a)-1):
    if list1a[i] == list1a[i+1]:
        i = i + 1
    else:
        balance = list1b[i]
        date = list1a[i]
        income_dup = list2a.count(date)
        for j in range(income_dup):
            if list2a[k] == date:
                opening_balance = float(opening_balance) + float(list2b[k])
                j = j + 1
                k = k + 1
            else:
                j = j + 1
        outcome_dup = list3a.count(date)
        for g in range(outcome_dup):
            if list3a[p] == date:
                opening_balance = float(opening_balance) - float(list3b[p])
                g = g + 1
                p = p + 1 
            else:
                g = g + 1
        if format(float(balance),".2f") == format(float(opening_balance),".2f"):
            i = i + 1
        else:
            new_balance = format(float(balance),".2f")
            new_opening_balance = format(float(opening_balance),".2f")
            print("Error at bank balance: "+ str(new_balance), "and client balance: " + str(new_opening_balance), "Date: " +str(date))
            opening_balance = balance
            o = o + 1
    
print("Bank reconcilliation complete, "+str(o), "errors detected")
